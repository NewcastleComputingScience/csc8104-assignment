= CSC8104: Enterprise Middleware Tutorial

This tutorial guides you through the necessary preparation required to begin your coursework for this module. It is very important that you have completed this and are comfortable with the examples, before the beginning of the first coursework week.

== Create Accounts
To complete this coursework you will need accounts on OpenShift and GitHub.

=== OpenShift
OpenShift is a Platform as a Service (PaaS) Cloud offered by Red Hat. It can host many types of applications, but for this coursework you will be using it to host Java EE 6 applications on JBoss EAP 6.1. OpenShift has a free tier of membership, which you will use for the coursework. 

To create an account:

. Go to: https://www.openshift.com
. Select "Signup for Free" under the "Online" option.
. Fill in your details and select "Sign Up".
. You should now receive an email containing a link to confirm your registration.  Click this link and confirm that you agree to OpenShift's terms of use.  

=== GitHub
GitHub offers the Git version control system as a service. You will use it to host your code and to make it available to the demonstrators. GitHub is very popular in the open-source community and works best when you make your code available to others to view, clone and contribute towards. However, given the confidential nature of your coursework, you will need to use a private repository only accessible by yourself and the demonstrators.

If you don't already have an account you will need to:

1. Go to: https://github.com/
2. Fill in your details and select "Sign up for GitHub."
3. Forward your Github account registration email to Matt Forshaw at (m.j.forshaw@ncl.ac.uk). Matt will then create your private repository, grant you access, and email you with the details.

TIP: GitHub is a very popular service, and you are quite likely to use it in your profesional career; especially if you work with open source software in some capacity. 

== Environment Setup

Once you have confirmed (as mentioned above) your email address with OpenShift, you will be directed to a web page titled https://www.openshift.com/get-started["Get Started"]. On this page you will need to select the *Command Line* option at the top of the page and follow the first two steps of the instructions subsequently listed.

* *Setup*. When running the `rhc setup` command you will be asked for your openshift *login* and *password*. Your login details are those used to register for OpenShift. When asked to provide a namespace for your projects, you should provide your student number (e.g 100826753). 

== Angular.js Tutorial

Now you should run through the Angular.js tutorial. It can be found here: http://docs.angularjs.org/tutorial. After running through this, you should understand the technology well enough to understand how the example (see next section) works.

* *Web Server*. When executing the tutorial examples, you should use the node.js webserver that is provided with the tutorial code.

* *Testing*. From http://docs.angularjs.org/tutorial/step_02[Step 2] onwards, the tutorial includes a heavy focus on testing. Whilst a useful feature of the framework, testing your AngularJS code will not be a focus of this course and you may ignore these sections of each step.

TIP: If you are having problems with your JavaScript, you can use Chrome's JavaScript console to see what's happening. To show it go to: View -> Developer -> JavaScript Console.


== Run Example
Now you will run a simple example. This example provides you with a starting point that you will build on when you come to doing the coursework. Therefore, it is very important that you get this working and become familiar with the code.

* *Download JBoss*. Get version EAP 6.1.0.Final from here: http://www.jboss.org/jbossas/downloads/. You need to make sure you use this version of JBoss as this matches the version you will be using on OpenShift. You will be required to register for the https://community.jboss.org/[JBoss community] website as part of the download process.
* *Extract*. Unzip this to somewhere on your computer.
* *Run kitchensink-angularjs locally*. Download the JBoss Web Framework Kit (WFK) Quickstarts from here: https://github.com/jboss-developer/jboss-wfk-quickstarts. Then run the kitchensink-angularjs quickstart by following the instructions at kitchensink-angularjs/README.md.
* *Run the tests*. Follow the testing instructions in kitchensink-angularjs/README.md. Specifically, the section titled "Run the Arquillian Tests". These tests allow you to check that your service is working, without having to manually drive it via the web interface. You will build on these tests when writing your service in the coursework.
* *Run kitchensink-angularjs on Openshift*. Now follow the "Build and Deploy the Quickstart - to OpenShift" section.

== Eclipse Setup
If you want to use Eclipse to edit the kitchensink-angularjs example (and your coursework), you must follow these steps:

. *Install m2eclipse*. Google "Install m2eclipse <your eclipse version>", the procedure differs between eclipse versions
. *Import the maven project into eclipse*. https://docs.jboss.org/author/display/AS7/Importing+the+quickstarts+into+Eclipse

== Working with Git
You will be using Git in the coursework for regular checkpoint and backup of your code to GitHub. You will also use Git to deploy new versions of your application to OpenShift. This section will show you how to create a copy of the 'kitchensik-angularjs' example, ready fo you to extend in the coursework, and also how to push the code to GitHub and OpenShift.

* Build on top of the kitchensink-angularjs example, by moving your clone of the OpenShift git repository at kitchensink-angularjs/kitchensinkangularjs to some other location on your disk, where you want to develop your coursework submission.
* Now you need to be able to push your code to your git repository on GitHub. To do this, you will need the url of the repository created by Matt on your earlier request. 

    git remote add github https://github.com/NewcastleComputingScience/<YOUR ID>.git
    git push github master -f
    
TIP: If you are new to Git, you should read Pro Git.  Chapters 1-3 should cover all the functionality required for this coursework.  Available at: http://git-scm.com/book
    
== Viewing your datasource
During development you may find it very useful to be able to inspect the contents of your database. To do this you will use h2console, which is provided as part of the quickstarts.

=== Deploying h2console
. Copy the h2console WAR file into the "deployments" directory of your repository. Change directory into your deployments directory and run the following command.

    copy "[some location]/jboss-as-quickstart/h2-console/h2console.war" h2console.war

. Add this file to your git repository, commit and push.

    git add deployments/h2console.war
    git commit -m 'h2console.war first commit'
    git push

=== Accessing h2console
You can access the console at http://<yourdomainname>.rhcloud.com/h2console.

To log into the datasource for your application, use the following details.

    Driver Class: javax.naming.InitialContext
    JDBC URL: Your JDBC URL is available in your persistence.xml file, and can be found between the <jta-data-source> tags e.g. java:jboss/datasources/KitchensinkAngularJSQuickstartDS
    Username: sa
    Passowrd: sa

. Click "Test Connection" and if these details are correct you will see "Test successful".

. Press "Connect" to view the contents of the datasource.

TIP: Your persistence.xml is the configuration file used to specify the connection details to your database. Your persistence.xml file can be found in src/main/resources/META-INF.


== Course Demonstrator Profiles

*Dr Paul Robinson* is a Senior Software Engineer at Red Hat and a Visiting Research Fellow at the University. Paul develops software for the JBoss application server and in particular for the Transaction Service component. Paul has lead the Enterprise Distributed Computing coursework for 9 years. He also supervises students for their Masters dissertation through industrial placements at Red Hat.

*Matt Forshaw* is a fourth year PhD student at Newcastle University. After completing his BSc and MSc ITEC (with Distinction) at Newcastle University, Matt has demonstrated and assessed on CSC8104 for the past four years. Matt is a member of the Systems research group investigating energy efficient operating policies for large computing environments. He also supervises student research projects and dissertations in the areas of energy-efficiency and green computing.

*Becky Simmonds* is a third year PhD student researching into Twitter analysis using online and offline techniques. She demonstrated on CSC8104 the last two years and completed it herself the year before. Becky demonstrates on other modules and helps supervise a final year dissertation.

*Ryan Emerson* is a third year PhD student who has studied at Newcastle University since 2007. Ryan graduated with a 2:1 BSc (Hons) in Computer Science in 2010 and obtained his Masters (ITEC) with Distinction in 2011. Currently Ryan is part of the Systems research group conducting research into probabilistic atomic broadcast protocols.

*Hugo Firth* is a first year PhD student with the Systems research group. Studying at Newcastle University since 2010, Hugo graduated with a BSc in Computer Science (1st Class) earlier this year. Since 2009 Hugo has offered freelance development services, providing API-centric web development to clients ranging from Web hosts to Game developers; he has recently completed a number of projects using AngularJS.


== Finally
Demonstrators will be available in your cluster rooms during all practical sessions. You should go and see them if you are having any difficulties. This includes understanding what you have to do.

Discussion Boards will also be available for CSC8104 in Blackboard (http://bb.ncl.ac.uk). You may post any questions about the tutorial or coursework assignment here, and the discussion boards will be monitored by Course Demonstrators. Before posting you should use the discussion boards' search facilities to see if somebody has already encountered the same problem.

TIP: If you see a question on the discussion boards you know how to answer, we strongly encourage you to assist your colleagues!


== Alocation List

[options="header"]
|=====
|Student     |Service    |Repository URL
|student1    |Taxi       |
|student2    |Hotel      |
|student3    |Service    |
|=====

IMPORTANT: If your name does not appear in the allocation list please contact Matt Forshaw at m.j.forshaw@ncl.ac.uk as soon as possible (prior to the first practical session) and you will be assigned a service type and a private GitHub repository.

